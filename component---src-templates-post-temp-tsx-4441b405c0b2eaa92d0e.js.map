{"version":3,"file":"component---src-templates-post-temp-tsx-4441b405c0b2eaa92d0e.js","mappings":"uOAOA,MAAMA,GAAgBC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,gFAatB,MAJyD,SAAAC,GAAqB,IAAX,KAAEC,GAAMD,EACzE,OAAOE,EAAAA,EAAAA,IAACP,EAAgB,CAACQ,wBAAyB,CAAEC,OAAQH,IAC9D,ECFA,MAAMI,GAAUT,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,oEAMVO,GAAQV,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,gHASRQ,GAAKX,EAAAA,EAAAA,GAAA,MAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,iEAOLS,GAAQZ,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,8FAORU,GAAQb,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,oSA0BRW,GAAKd,EAAAA,EAAAA,GAAA,QAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,sLAYLY,GAAUf,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,iFAQVa,GAAShB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAI,CAAAhB,OAAA,YAAXD,CAAY,CAAAE,KAAA,SAAAC,OAAA,iRAkF3B,MA9D2D,SAAAC,GAIxD,IAHAc,MACCC,mBAAmB,MAAEC,KAExBhB,EACC,MACEiB,MAAM,KACJhB,EACAiB,aAAa,MACXC,EAAK,UACLC,EAAS,QACTC,EAAO,OACPC,EACAC,YAAY,UACVC,GACD,KACDC,KAGFT,EAAM,GAIV,OACAd,EAAAA,EAAAA,IAACwB,EAAAA,EAAQ,MACNxB,EAAAA,EAAAA,IAACG,EAAU,MACRH,EAAAA,EAAAA,IAAA,OAAKyB,UAAU,cACXzB,EAAAA,EAAAA,IAACK,EAAK,KAAEY,IACRjB,EAAAA,EAAAA,IAACI,EAAQ,MAGPJ,EAAAA,EAAAA,IAACU,EAAM,CAACgB,GAAI,MAAK1B,EAAAA,EAAAA,IAAC2B,EAAAA,IAAiB,CAACC,KAAM,OAE1C5B,EAAAA,EAAAA,IAAA,OAAKyB,UAAU,cACbzB,EAAAA,EAAAA,IAACM,EAAQ,MACPN,EAAAA,EAAAA,IAACO,EAAQ,MAACP,EAAAA,EAAAA,IAAC6B,EAAAA,IAAiB,CAACD,KAAM,MAAK5B,EAAAA,EAAAA,IAAA,SAAG,SAAQA,EAAAA,EAAAA,IAAA,YAAM,IAAEkB,EAAU,MAAIC,KACzEnB,EAAAA,EAAAA,IAACO,EAAQ,MAACP,EAAAA,EAAAA,IAAC8B,EAAAA,IAAsB,CAACF,KAAM,MACxC5B,EAAAA,EAAAA,IAAA,SAAG,QAEDoB,EAAOW,KAAKC,IAAShC,EAAAA,EAAAA,IAACQ,EAAK,KAAEwB,OAG/BhC,EAAAA,EAAAA,IAACO,EAAQ,KAAC,KAACP,EAAAA,EAAAA,IAACiC,EAAAA,IAAa,CAACL,KAAM,KAAK,KAAC5B,EAAAA,EAAAA,IAAA,SAAG,OAAO,IAAEuB,GAAMvB,EAAAA,EAAAA,IAAA,KAAGkC,KAAMX,EAAM5B,OAAQ,UAAW4B,GAAY,QAKxGvB,EAAAA,EAAAA,IAACS,EAAU,CAAC0B,IAAKb,KAEjBtB,EAAAA,EAAAA,IAAA,OAAKyB,UAAU,iBACbzB,EAAAA,EAAAA,IAACoC,EAAW,CAACrC,KAAMA,QAUrC,C","sources":["webpack://gatsby-starter-default/./src/components/Common/PostContent.tsx","webpack://gatsby-starter-default/./src/templates/post_temp.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0 auto;\n  padding: 100px 0;\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent\n","import React, { FunctionComponent } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Template from 'components/Common/Template'\nimport { PostFrontmatterType} from 'types/PostItem.types'\n// import PostHead from 'components/Common/PostHeader'\nimport styled from '@emotion/styled'\nimport {  AiOutlineCalendar, \n          AiOutlineUser,\n          AiOutlineUnorderedList, \n          AiOutlineLink, \n          AiOutlineSwapLeft } from 'react-icons/ai';\n\n\nimport PostContent from 'components/Common/PostContent'\n\ntype PostTemplateProps = {}\nconst TemplateBg = styled.div`\n  width: 100%; \n  height: 100%; \n  background-color: #F6F6F6; \n  padding: 120px 0; \n`\nconst PostWrap= styled.div`\n\n  padding: 50px 60px; \n  background-color: #ffffff; \n  border-radius: 10px;\n  @media (max-width: 768px) {\n    padding: 30px 50px; \n  }\n`\nconst Title = styled.h2`\n  font-size: 40px; \n  font-weight: 700;\n  color: #333; \n  margin-bottom: 28px;\n  \n`\nconst InfoList = styled.div`\n  border-bottom: 1px solid #e5e5e5; \n  margin-bottom: 80px;\n  padding-bottom: 50px; \n  margin-bottom: 80px;\n\n`\nconst InfoLine = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 5px 0; \n  flex-wrap: wrap;\n  b{\n    width: 80px;\n    font-size: 16px;\n    color: #3dd065;\n    padding: 0 10px;\n    margin-right: 12px; \n  }\n  span{\n    color: #555555; \n    font-size: 16px; \n  }\n  a{\n    text-decoration: underline !important;\n    color: #555555 !important;\n    transition: all .15s;\n    &:hover{\n      color: #3dd065 !important; \n    }\n    /* */\n  }\n`\nconst Label = styled.span`\n    padding: 3px 5px;\n    border: 1px solid #DEDEDE;\n    color: #333333;\n    border-radius: 5px;\n    display: inline-block;\n    margin-right: 4px;\n    font-size: 11px;\n    font-weight: 600;\n    font-family: 'Montserrat', sans-serif;\n`\n\nconst ContentImg = styled.img`\n  display: block;\n  width: 70%;\n  margin: 0 auto; \n  @media (max-width: 991px) {\n    width: 100%\n  }\n`\nconst GoBack = styled(Link)`\n  position: fixed; \n  top: 70%; \n  right: 8px; \n  background: #3dd065; \n  width: 60px; \n  height: 60px; \n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);\n  transition: .3s ease-out; \n  svg{\n    color: #ffffff; \n  }\n  &:hover{\n    transform: translateX(-10px);\n  }\n`\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n   data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        startDate,\n        endDate,\n        skills,\n        contentImg: {\n          publicURL\n        },\n        link\n      },\n    },\n  } = edges[0]\n// const PostTemplate: FunctionComponent<PostTemplateProps> = function (props) {\n//   console.log(props)\n\n  return (\n  <Template>\n     <TemplateBg>\n        <div className='container'>\n            <Title>{title}</Title>\n            <PostWrap>\n           \n           \n              <GoBack to={'/'}><AiOutlineSwapLeft size={28}/></GoBack>\n              \n              <div className='info-list'>\n                <InfoList>\n                  <InfoLine><AiOutlineCalendar size={22}/><b>투입기간</b><span> {startDate} ~ {endDate}</span></InfoLine>\n                  <InfoLine><AiOutlineUnorderedList size={22}/> \n                  <b>사용언어</b>\n                   {\n                    skills.map( skill => <Label>{skill}</Label>)\n                  }\n                  </InfoLine>\n                  <InfoLine> <AiOutlineLink size={22}/> <b>URL</b> {link? <a href={link} target={'_blank'}>{link}</a> : '-'}</InfoLine>\n                  \n                </InfoList>\n              </div>\n             \n                <ContentImg src={publicURL}/> \n              \n                <div className='post-content'>\n                  <PostContent html={html} />\n                </div>\n              \n            \n            \n            </PostWrap>\n            </div>\n            </TemplateBg>\n        </Template>\n    )\n}\n\nexport default PostTemplate\n\n\nexport type PostPageItemType = {\n  node: {\n    html: string\n    frontmatter: PostFrontmatterType\n  }\n}\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            startDate\n            endDate\n            skills\n            contentImg {\n              publicURL\n            }\n            link\n           \n          }\n        }\n      }\n    }\n  }\n`"],"names":["MarkdownRenderer","_styled","target","name","styles","_ref","html","___EmotionJSX","dangerouslySetInnerHTML","__html","TemplateBg","PostWrap","Title","InfoList","InfoLine","Label","ContentImg","GoBack","Link","data","allMarkdownRemark","edges","node","frontmatter","title","startDate","endDate","skills","contentImg","publicURL","link","Template","className","to","AiOutlineSwapLeft","size","AiOutlineCalendar","AiOutlineUnorderedList","map","skill","AiOutlineLink","href","src","PostContent"],"sourceRoot":""}