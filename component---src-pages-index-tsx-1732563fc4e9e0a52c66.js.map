{"version":3,"file":"component---src-pages-index-tsx-1732563fc4e9e0a52c66.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Main/ItemList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent,  useState, useCallback } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { PostFrontmatterType } from 'types/PostItem.types'\nimport { GatsbyImage} from 'gatsby-plugin-image'\n\ntype PostItemProps = PostFrontmatterType & { link: string }\n\n\nconst PostItemWrapper = styled(Link)`\n  width: 100%;\n  height: 270px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  transition: 0.3s box-shadow;\n  /* background-color: #ffffff; */\n  cursor: pointer;\n  transform: translate3d(0,0,0);\n  transition: all .2s ease-out;\n  position: relative;\n  overflow: hidden;\n  &:hover {\n    /* transform: scale(1.03) translate3d(2px, -4px, -20px); */\n    box-shadow: 0 0 30px rgba(40, 24, 124, 0.3);\n\n    .itemContent{\n      opacity: 1;\n      /* transform: translate(0%, -14%) rotateX(-183deg) rotateY(169deg) rotateZ(-502deg) scale(1.1)!important; */\n\n    }\n  }\n  @media (max-width: 768px) {\n    margin-bottom: 10px; \n  }\n\n  \n`\nconst ThumbContainer = styled.div`\n    width: 100%; \n    height: 270px;\n    max-height: 400px; \n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10px;\n    overflow: hidden;\n    position: relative; \n    background-size: cover;\n    background-position: center center;\n    background-repeat: none;\n`\n\nconst Content = styled.div`\n    /* background: #ffffff;  */\n    width: 100%; \n    height: 100%;\n    padding: 22px 30px; \n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    position: absolute;\n    left: 0; top: 0; \n    background: rgba(0,0,0,0.8);\n`\n\nconst Date = styled.span`\n    font-size: 1rem;\n    line-height: 1em ;\n    color: #999999;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 600;\n    display: inline-block;\n    margin-bottom: 10px; \n`\nconst Title = styled.h2`\n    font-size: 1.638rem;\n    line-height: 1.213em;\n    letter-spacing: -0.04em;\n    margin-bottom: 14px;\n    color: #ffffff; \n    @media (max-width: 640px) {\n      height: auto;\n      margin-bottom: 30px;\n    }\n`\nconst LabelWrap = styled.div`\n    width: 100%; \n    display: flex;\n    flex-grow: 1;\n    align-items: flex-start;\n    flex-wrap: wrap;\n`\nconst Label = styled.span`\n    padding: 3px 5px;\n    /* border: 1px solid #DEDEDE; */\n    border: 1px solid #3dd065;\n    background: #3dd065; \n    color: #333333;\n    border-radius: 4px;\n    margin: 3px;\n    display: inline-block;\n    margin-right: 3px;\n    font-size: .75rem;\n    font-weight: 600;\n    font-family: 'Montserrat', sans-serif;\n`\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n    title,\n    startDate,\n    endDate,\n    skills,\n    thumbnail:{publicURL},\n    link,\n  }) {\n    \n    return (\n        <PostItemWrapper to={link} >\n        {/* <PostItemWrapper ={onClickToggleModal} > */}\n            <ThumbContainer style={{backgroundImage: `url(${publicURL})`}} />\n            <div className='itemContent'>\n              <Content>\n                  <div>\n                    <Date>{startDate} ~ {endDate}</Date>\n                    <Title>{title}</Title>\n                  </div>\n                  <div>\n                    <LabelWrap>{skills.map( skill => (\n                        <Label>{skill}</Label>\n                    ))}</LabelWrap>\n                  </div>\n              </Content>\n            </div>\n        </PostItemWrapper>\n    )\n  }\n  \n  export default PostItem\n\n//   {isOpenModal && (\n//     <Modal onClickToggleModal={onClickToggleModal}>\n//     이곳에 children이 들어갑니다.\n//     </Modal>\n// )}","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostItem from './PostItem'\nimport { PostListItemType } from 'types/PostItem.types'\nimport { AiFillGithub} from \"react-icons/ai\";\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/navigation/navigation.min.css';\n// import SwiperCore, { Navigation, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination } from \"swiper\";\n\ntype PostListProps = {\n  posts: PostListItemType[]\n}\n\n\nconst TitleBox = styled.div`\n  position: absolute;\n  top: -50px;\n  height: 270px; \n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  margin-left: -60px;\n  font-size: 3.75rem;\n  z-index:2;\n  @media (max-width: 640px) {\n    height: 60vw; \n  }\n  transition: all .2s;\n  @media (max-width: 1200px){\n   \n  }\n \n  @media (max-width: 768px) {\n    font-size: 3rem; \n    padding-left: 20px;\n  }\n  @media (max-width: 640px){\n    height: 350px;\n    top: -80px;\n \n  }\n  @media (max-width: 480px) {\n    font-size: 9.5vw;\n  }\n  &:hover h2 {\n    transform: translate3d(0, -1em, 0);\n  }\n`\n\nconst TitleLine = styled.div`\n  height: 3.75rem; \n  width: 400px;\n  overflow: hidden;\n  position: relative;\n  &:nth-child(odd) {\n    transform: skew(60deg, -20deg) scaleY(0.66667);\n  }\n  &:nth-child(even) {\n    transform: skew(0deg, -20deg) scaleY(1.33333);\n  }\n  &:nth-child(1) {\n    left: 24px;\n  }\n  &:nth-child(2) {\n    left: 52px;\n  }\n  &:nth-child(3) {\n    left: 87px;\n  }\n  &:nth-child(4) {\n  left: 116px;\n}\n  &:nth-child(5) {\n    left: 145px;\n  }\n  @media (max-width: 768px) {\n  \n    height: 3rem;\n  }\n`\nconst ListTitle = styled.h2`\n  margin-bottom: 5px; \n  font-size: 3.75rem;\n  line-height: 1em;\n  font-weight: 800;\n  color: #ffffff; \n  font-family: 'Montserrat', sans-serif;\n  @media (max-width: 768px) {\n    font-size: 3rem;\n  }\n  @media (max-width: 480px) {\n    font-size: 9.5vw;\n  }\n  \n  height: 1em;\n  line-height: 1em;\n  padding: 0 10px;\n  transition: all 0.4s ease-in-out;\n  transform: translate3d(0, 0, 0);\n  vertical-align: top;\n  white-space: nowrap;\n\n`\n\nconst List = styled.div` \nwidth:100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 42px;\n  padding-bottom: 140px;\n  position: relative; \n  \n  /* transform: translate(10%, -44%) rotateX(-65deg) rotateY(4deg) rotateZ(-37deg); */\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media (max-width: 768px) {\n    grid-gap: 20px;\n  }\n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst EmptyBox = styled.div`\n  position: relative;\n  height: 270px;\n`\nconst Wrap = styled.div`\n  width: 100%; \n  height: auto; \n  display: flex;\n  align-items: center;\n  justify-content: center; \n  flex-direction: column;\n  position: relative;\n  margin-top: 170px;\n  @media (max-width: 640px) {\n    margin-top: 90px;\n  }\n`\nconst ItemList: FunctionComponent<PostListProps> = function ({posts}) {\n    return (\n      <div className='container'>\n        <Wrap>\n            <List>\n            {/* <Outlink href=\"https://github.com/siennapp/siennapp.github.io\" target={'_blank'} title={'포트폴리오 깃헙 레파지토리 바로가기'}\n            ><AiFillGithub size={23}/></Outlink> */}\n            <EmptyBox>\n              <TitleBox>\n                <TitleLine>\n                  <ListTitle></ListTitle>\n                  <ListTitle>WORK</ListTitle>\n                </TitleLine>\n                <TitleLine>\n                  <ListTitle>WORK</ListTitle>\n                  <ListTitle>PORTFOLIO</ListTitle>\n                </TitleLine>\n                <TitleLine>\n                  <ListTitle>PORTFOLIO</ListTitle>\n                  <ListTitle>BY SIENNA</ListTitle>\n                </TitleLine>\n                <TitleLine>\n                  <ListTitle>BY SIENNA</ListTitle>\n                  <ListTitle></ListTitle>\n                </TitleLine>\n              </TitleBox>\n            </EmptyBox>\n            {posts.map(\n              ({\n                node: { id, fields: { slug },frontmatter },\n              }: PostListItemType) => (\n                <PostItem {...frontmatter} link={slug} key={id} />\n              )\n            )}\n            </List>\n\n\n        </Wrap>\n      </div>\n      \n    )\n  }\n  \n  export default ItemList","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport GlobalStyle from '../components/Common/GlobalStyle'\nimport Profile from '../components/Main/Profile'\nimport ItemList from '../components/Main/ItemList'\nimport Footer from '../components/Common/Footer'\nimport { graphql } from 'gatsby'\nimport { PostListItemType } from 'types/PostItem.types'\nimport Template from 'components/Common/Template'\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n  }\n}\nconst ContentSection = styled.div`\n  flex-grow: 1;\n  min-height: calc( 100vh - 50px );\n  position: relative;\n  background-color: #0b0b1a;\n  &::before{\n    content:'';\n    width: 100%; \n    height: 90vh; \n    position: absolute;\n    left: 0; top: 0; \n    background: #0b0b1a;\n  }\n  @media (max-width: 640px) {\n    &::before{\n      height: 70vw; \n    }\n  }\n`\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  return (\n    <Template>\n      {/* <Profile /> */}\n      <ContentSection>\n        <ItemList posts={edges}/>\n      </ContentSection>\n    </Template>\n\n  );\n};\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [ frontmatter___endDate] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            startDate\n            endDate\n            skills\n            thumbnail {\n              publicURL\n            }\n            link\n          }\n        }\n      }\n    }\n  }\n`"],"names":["PostItemWrapper","_styled","Link","target","name","styles","ThumbContainer","Content","Date","Title","LabelWrap","Label","_ref","title","startDate","endDate","skills","thumbnail","publicURL","link","___EmotionJSX","to","style","backgroundImage","className","map","skill","TitleBox","TitleLine","ListTitle","List","EmptyBox","Wrap","posts","_ref2","node","id","fields","slug","frontmatter","PostItem","_extends","key","ContentSection","location","search","data","allMarkdownRemark","edges","Template","ItemList"],"sourceRoot":""}